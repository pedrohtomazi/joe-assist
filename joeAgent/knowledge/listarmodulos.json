[
  "# Aprendizado: Comando /listarmodulos\nData: 16/05/2025 03:44",
  "## Objetivo\nVoc√™ deve criar um **m√≥dulo local** que permita listar todos os arquivos Python da pasta `modules/`. \nEsse comando √© √∫til para o usu√°rio visualizar os m√≥dulos dispon√≠veis que podem ser usados, editados ou exclu√≠dos.",
  "---",
  "## O que voc√™ deve fazer:",
  "### 1. Crie o m√≥dulo chamado `listar_modulos.py` dentro da pasta `modules/`.",
  "### 2. Dentro desse m√≥dulo, crie a fun√ß√£o `mostrar_modulos()` com o seguinte comportamento:\n- Percorra recursivamente a pasta `modules/`\n- Pegue todos os arquivos `.py` (exceto `__init__.py`)\n- Retorne uma string no seguinte formato:",
  "Exemplo de sa√≠da:\n```\nüì¶ M√≥dulos encontrados:\n- auto_learn\n- limpador_memoria\n- status_memoria\n```",
  "### 3. Registre o comando para que o usu√°rio possa usar no chat:\n```python\nregistrar_comando(\"/listarmodulos\", \"listar_modulos\", \"mostrar_modulos\")\n```",
  "## Restri√ß√µes importantes:\n- ‚ùå N√£o utilize bibliotecas como `discord`, `FastAPI`, `telegram`, etc.\n- ‚úÖ Use somente `os.walk`, `os.path`, e recursos nativos do Python.\n- ‚úÖ O m√≥dulo deve funcionar 100% em um ambiente local.\n- ‚úÖ A resposta no chat deve vir formatada como texto simples.\n- ‚úÖ O nome da fun√ß√£o precisa ser exatamente: `mostrar_modulos`",
  "## Observa√ß√£o Final\nVoc√™ √© um assistente local e modular. Sua fun√ß√£o √© criar m√≥dulos √∫teis e registr√°-los com comandos para facilitar a automa√ß√£o do sistema."
]